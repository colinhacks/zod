"use strict";
/* ZOD */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZodError = exports.Schema = exports.ZodType = exports.ZodPromise = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodGeneric = exports.ZodUnion = exports.ZodObject = exports.ZodArray = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.oboolean = exports.onumber = exports.ostring = exports.promise = exports.enum = exports.literal = exports.lazy = exports.function = exports.record = exports.tuple = exports.intersection = exports.generic = exports.union = exports.object = exports.array = exports.unknown = exports.any = exports.null = exports.undefined = exports.date = exports.boolean = exports.bigint = exports.number = exports.string = void 0;
const any_1 = require("./types/any");
Object.defineProperty(exports, "ZodAny", { enumerable: true, get: function () { return any_1.ZodAny; } });
const array_1 = require("./types/array");
Object.defineProperty(exports, "ZodArray", { enumerable: true, get: function () { return array_1.ZodArray; } });
const base_1 = require("./types/base");
Object.defineProperty(exports, "ZodType", { enumerable: true, get: function () { return base_1.ZodType; } });
Object.defineProperty(exports, "Schema", { enumerable: true, get: function () { return base_1.ZodType; } });
const bigint_1 = require("./types/bigint");
Object.defineProperty(exports, "ZodBigInt", { enumerable: true, get: function () { return bigint_1.ZodBigInt; } });
const boolean_1 = require("./types/boolean");
Object.defineProperty(exports, "ZodBoolean", { enumerable: true, get: function () { return boolean_1.ZodBoolean; } });
const date_1 = require("./types/date");
Object.defineProperty(exports, "ZodDate", { enumerable: true, get: function () { return date_1.ZodDate; } });
const generic_1 = require("./types/generic");
Object.defineProperty(exports, "ZodGeneric", { enumerable: true, get: function () { return generic_1.ZodGeneric; } });
const enum_1 = require("./types/enum");
Object.defineProperty(exports, "ZodEnum", { enumerable: true, get: function () { return enum_1.ZodEnum; } });
const function_1 = require("./types/function");
Object.defineProperty(exports, "ZodFunction", { enumerable: true, get: function () { return function_1.ZodFunction; } });
const intersection_1 = require("./types/intersection");
Object.defineProperty(exports, "ZodIntersection", { enumerable: true, get: function () { return intersection_1.ZodIntersection; } });
const lazy_1 = require("./types/lazy");
Object.defineProperty(exports, "ZodLazy", { enumerable: true, get: function () { return lazy_1.ZodLazy; } });
const literal_1 = require("./types/literal");
Object.defineProperty(exports, "ZodLiteral", { enumerable: true, get: function () { return literal_1.ZodLiteral; } });
const null_1 = require("./types/null");
Object.defineProperty(exports, "ZodNull", { enumerable: true, get: function () { return null_1.ZodNull; } });
const number_1 = require("./types/number");
Object.defineProperty(exports, "ZodNumber", { enumerable: true, get: function () { return number_1.ZodNumber; } });
const object_1 = require("./types/object");
Object.defineProperty(exports, "ZodObject", { enumerable: true, get: function () { return object_1.ZodObject; } });
const promise_1 = require("./types/promise");
Object.defineProperty(exports, "ZodPromise", { enumerable: true, get: function () { return promise_1.ZodPromise; } });
const record_1 = require("./types/record");
Object.defineProperty(exports, "ZodRecord", { enumerable: true, get: function () { return record_1.ZodRecord; } });
const string_1 = require("./types/string");
Object.defineProperty(exports, "ZodString", { enumerable: true, get: function () { return string_1.ZodString; } });
const tuple_1 = require("./types/tuple");
Object.defineProperty(exports, "ZodTuple", { enumerable: true, get: function () { return tuple_1.ZodTuple; } });
const undefined_1 = require("./types/undefined");
Object.defineProperty(exports, "ZodUndefined", { enumerable: true, get: function () { return undefined_1.ZodUndefined; } });
const union_1 = require("./types/union");
Object.defineProperty(exports, "ZodUnion", { enumerable: true, get: function () { return union_1.ZodUnion; } });
const unknown_1 = require("./types/unknown");
Object.defineProperty(exports, "ZodUnknown", { enumerable: true, get: function () { return unknown_1.ZodUnknown; } });
const ZodError_1 = require("./ZodError");
Object.defineProperty(exports, "ZodError", { enumerable: true, get: function () { return ZodError_1.ZodError; } });
const stringType = string_1.ZodString.create;
exports.string = stringType;
const numberType = number_1.ZodNumber.create;
exports.number = numberType;
const bigIntType = bigint_1.ZodBigInt.create;
exports.bigint = bigIntType;
const booleanType = boolean_1.ZodBoolean.create;
exports.boolean = booleanType;
const dateType = date_1.ZodDate.create;
exports.date = dateType;
const undefinedType = undefined_1.ZodUndefined.create;
exports.undefined = undefinedType;
const nullType = null_1.ZodNull.create;
exports.null = nullType;
const anyType = any_1.ZodAny.create;
exports.any = anyType;
const unknownType = unknown_1.ZodUnknown.create;
exports.unknown = unknownType;
const arrayType = array_1.ZodArray.create;
exports.array = arrayType;
const objectType = object_1.ZodObject.create;
exports.object = objectType;
const unionType = union_1.ZodUnion.create;
exports.union = unionType;
const genericType = generic_1.ZodGeneric.create;
exports.generic = genericType;
const intersectionType = intersection_1.ZodIntersection.create;
exports.intersection = intersectionType;
const tupleType = tuple_1.ZodTuple.create;
exports.tuple = tupleType;
const recordType = record_1.ZodRecord.create;
exports.record = recordType;
const functionType = function_1.ZodFunction.create;
exports.function = functionType;
const lazyType = lazy_1.ZodLazy.create;
exports.lazy = lazyType;
// const lazyobjectType = ZodLazyObject.create;
// const recursionType = ZodObject.recursion;
const literalType = literal_1.ZodLiteral.create;
exports.literal = literalType;
const enumType = enum_1.ZodEnum.create;
exports.enum = enumType;
const promiseType = promise_1.ZodPromise.create;
exports.promise = promiseType;
const ostring = () => stringType().optional();
exports.ostring = ostring;
const onumber = () => numberType().optional();
exports.onumber = onumber;
const oboolean = () => booleanType().optional();
exports.oboolean = oboolean;
//# sourceMappingURL=index.js.map